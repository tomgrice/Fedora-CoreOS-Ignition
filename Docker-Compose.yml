variant: fcos
version: 1.4.0
passwd:
  users:
    - name: trmg
      password_hash: y$j9T$JGZvmkKywZp2cDtA8ArbY/$ddAB3DSlKw3kIGuFWNn57QCYgqVl12LCSnb9mS0EPg5
      groups:
        - wheel
        - sudo
systemd:
  units:
    - name: postinst.service
      enabled: true
      contents: |
        [Unit]
        Description=Initial System Setup
        # We run after `systemd-machine-id-commit.service` to ensure that
        # `ConditionFirstBoot=true` services won't rerun on the next boot.
        After=systemd-machine-id-commit.service
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/sed -i 's/#DNSSEC=no/DNSSEC=yes/g' /etc/systemd/resolved.conf
        ExecStart=/usr/bin/systemctl restart systemd-resolved
        ExecStart=/usr/bin/rpm-ostree install docker-compose firewalld qemu-guest-agent tuned unbound
        ExecStart=/usr/bin/rpm-ostree override remove cifs-utils samba-common-libs samba-client-libs libsmbclient libwbclient samba-common sssd-krb5-common sssd-ipa sssd-nfs-idmap sssd-ldap sssd-client sssd-ad sssd-common sssd-krb5 sssd-common-pac
        ExecStart=/usr/bin/sed -i 's/nullok//g' /etc/pam.d/system-auth
        ExecStart=/usr/bin/curl https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/modprobe.d/30_security-misc.conf -o /etc/modprobe.d/30_security-misc.conf
        ExecStart=/usr/bin/curl https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_security-misc.conf -o /etc/sysctl.d/30_security-misc.conf
        ExecStart=/usr/bin/sed -i 's/kernel.yama.ptrace_scope=2/kernel.yama.ptrace_scope=1/g' /etc/sysctl.d/30_security-misc.conf
        ExecStart=/usr/bin/sed -i 's/net.ipv4.icmp_echo_ignore_all=1/net.ipv4.icmp_echo_ignore_all=0/g' /etc/sysctl.d/30_security-misc.conf
        ExecStart=/usr/bin/sed -i 's/net.ipv6.icmp.echo_ignore_all=1/net.ipv6.icmp.echo_ignore_all=0/g' /etc/sysctl.d/30_security-misc.conf
        ExecStart=/usr/bin/curl https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_silent-kernel-printk.conf -o /etc/sysctl.d/30_silent-kernel-printk.conf
        ExecStart=/usr/bin/curl https://raw.githubusercontent.com/Kicksecure/security-misc/master/etc/sysctl.d/30_security-misc_kexec-disable.conf -o /etc/sysctl.d/30_security-misc_kexec-disable.conf
        ExecStart=/usr/bin/curl https://raw.githubusercontent.com/GrapheneOS/infrastructure/main/chrony.conf -o /etc/chrony.conf
        ExecStart=/usr/bin/mkdir -p /etc/systemd/system/NetworkManager.service.d
        ExecStart=/usr/bin/curl https://gitlab.com/divested/brace/-/raw/master/brace/usr/lib/systemd/system/NetworkManager.service.d/99-brace.conf -o /etc/systemd/system/NetworkManager.service.d/99-brace.conf
        ExecStart=/usr/bin/mkdir -p /etc/systemd/system/irqbalance.service.d
        ExecStart=/usr/bin/curl https://gitlab.com/divested/brace/-/raw/master/brace/usr/lib/systemd/system/irqbalance.service.d/99-brace.conf -o /etc/systemd/system/irqbalance.service.d/99-brace.conf
        ExecStart=/usr/bin/mkdir -p /etc/systemd/system/sshd.service.d
        ExecStart=/usr/bin/curl https://raw.githubusercontent.com/GrapheneOS/infrastructure/main/systemd/system/sshd.service.d/limits.conf -o /etc/systemd/system/sshd.service.d/limits.conf
        ExecStart=/bin/systemctl disable systemd-resolved
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target
    - name: setsebool.service
      enabled: true
      contents: |
        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/setsebool container_use_cephfs off
        ExecStart=/usr/sbin/setsebool virt_use_nfs off
        ExecStart=/usr/sbin/setsebool virt_use_samba off
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target
    - name: gvisor-updater.service
      enabled: true
      contents: |
        [Unit]
        Description=gVisor Update
        Requires=network-online.target
        Before=docker.service

        [Service]
        WorkingDirectory=/var/roothome
        Type=oneshot
        ExecStart=/usr/bin/sleep 5
        ExecStart=/usr/bin/curl -O https://storage.googleapis.com/gvisor/releases/release/latest/x86_64/runsc
        ExecStart=/usr/bin/curl -O https://storage.googleapis.com/gvisor/releases/release/latest/x86_64/runsc.sha512
        ExecStart=/usr/bin/curl -O https://storage.googleapis.com/gvisor/releases/release/latest/x86_64/containerd-shim-runsc-v1
        ExecStart=/usr/bin/curl -O https://storage.googleapis.com/gvisor/releases/release/latest/x86_64/containerd-shim-runsc-v1.sha512
        ExecStart=/usr/bin/sha512sum -c runsc.sha512 -c containerd-shim-runsc-v1.sha512
        ExecStart=/usr/bin/rm -f runsc.sha512 containerd-shim-runsc-v1.sha512
        ExecStart=/usr/bin/chmod a+rx runsc containerd-shim-runsc-v1
        ExecStart=/usr/bin/mv runsc containerd-shim-runsc-v1 /var/usrlocal/bin
        ExecStart=/usr/bin/chcon system_u:object_r:container_runtime_exec_t:s0 /var/usrlocal/bin/runsc

        [Install]
        WantedBy=multi-user.target
    - name: docker.service
      enabled: true
    - name: fstrim.timer
      enabled: true
    - name: systemd-oomd.service
      enabled: true
    - name: rpm-ostree-countme.timer
      enabled: false
      mask: true
    - name: sshd.service
      enabled: false
    - name: sshd.socket
      enabled: true
storage:
  files:
    - path: /etc/ssh/sshd_config.d/10-custom.conf
      contents:
        inline: |
          X11Forwarding no
          GSSAPIAuthentication no
    - path: /etc/ssh/sshd_config.d/20-enable-passwords.conf
      mode: 0644
      contents:
        inline: |
          PasswordAuthentication yes
    - path: /etc/zincati/config.d/51-rollout-wariness.toml
      contents:
        inline: |
          [identity]
          rollout_wariness = 0
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "periodic"
          [updates.periodic]
          time_zone = "localtime"
          [[updates.periodic.window]]
          days = [ "Sun" ]
          start_time = "0:00"
          length_minutes = 60
    - path: /etc/tuned/active_profile
      overwrite: true
      contents:
        inline: |
          virtual-guest
    - path: /etc/tuned/profile_mode
      overwrite: true
      contents:
        inline: |
          manual
    - path: /etc/systemd/zram-generator.conf
      overwrite: true
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]
          zram-fraction = 1
          max-zram-size = 8192
    - path: /etc/security/limits.d/30-disable-coredump.conf
      overwrite: true
      contents:
        inline: |
          * hard core 0
    - path: /etc/ssh/ssh_config.d/10-custom.conf
      overwrite: true
      contents:
        inline: |
          GSSAPIAuthentication no
          VerifyHostKeyDNS yes
    - path: /etc/systemd/system/automatic-updater.service
      contents:
        inline: |
          [Unit]
          Description=Automatic Updater
          After=docker.service
          Requires=network-online.target
          Requires=docker.service

          [Service]
          User=root
          Group=root
          WorkingDirectory=/path/to/docker-compose/directory
          #ExecStart=/usr/bin/git pull
          ExecStart=/usr/bin/docker-compose pull
          ExecStart=/usr/bin/docker-compose up -d
          Type=oneshot

          [Install]
          WantedBy=multi-user.target
    - path: /etc/unbound/unbound.conf
      overwrite: true
      contents:
        inline: |
          server:
            chroot: ""

            auto-trust-anchor-file: "/var/lib/unbound/root.key"
            trust-anchor-signaling: yes
            root-key-sentinel: yes

            tls-cert-bundle: /etc/ssl/certs/ca-certificates.crt
            tls-ciphers: "PROFILE=SYSTEM"

            hide-http-user-agent: yes
            hide-identity: yes
            hide-trustanchor: yes
            hide-version: yes

            deny-any: yes
            harden-algo-downgrade: yes
            harden-large-queries: yes
            harden-referral-path: yes
            harden-short-bufsize: yes
            ignore-cd-flag: yes
            max-udp-size: 3072
            module-config: "validator iterator"
            qname-minimisation-strict: yes
            unwanted-reply-threshold: 10000000
            use-caps-for-id: yes

            outgoing-port-permit: 1024-65535

            prefetch: yes
            prefetch-key: yes

          forward-zone:
            name: "."
            forward-tls-upstream: yes
            forward-addr: 1.1.1.1@853#cloudflare-dns.com
            forward-addr: 1.0.0.1@853#cloudflare-dns.com
            forward-addr: 2606:4700:4700::1111@853#cloudflare-dns.com
            forward-addr: 2606:4700:4700::1001@853#cloudflare-dns.com
    - path: /etc/systemd/system/unbound.service.d/override.conf
      contents:
        inline: |
          [Service]
          MemoryDenyWriteExecute=true
          PrivateDevices=true
          PrivateTmp=true
          ProtectHome=true
          ProtectClock=true
          ProtectControlGroups=true
          ProtectKernelLogs=true
          ProtectKernelModules=true
          # This breaks using socket options like 'so-rcvbuf'. Explicitly disable for visibility.
          ProtectKernelTunables=true
          ProtectProc=invisible
          RestrictAddressFamilies=AF_INET AF_INET6 AF_NETLINK AF_UNIX
          RestrictRealtime=true
          SystemCallArchitectures=native
          SystemCallFilter=~@clock @cpu-emulation @debug @keyring @module mount @obsolete @resources
          RestrictNamespaces=yes
          LockPersonality=yes
    - path: /etc/docker/daemon.json
      contents:
        inline: |
          {
              "default-runtime": "runsc-systrap",
              "runtimes": {
                  "runsc-systrap": {
                      "path": "/var/usrlocal/bin/runsc",
                      "runtimeArgs": [
                          "--platform=systrap",
                          "--network=host"
                      ]
                  },
                  "runsc-ptrace": {
                      "path": "/var/usrlocal/bin/runsc",
                      "runtimeArgs": [
                          "--platform=ptrace",
                          "--network=host"
                      ]
                  },
                  "runsc-kvm": {
                      "path": "/var/usrlocal/bin/runsc",
                      "runtimeArgs": [
                          "--platform=kvm",
                          "--network=host"
                      ]
                  }
              }
          }
  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/America/New_York
    - path: /etc/systemd/system/multi-user.target.wants/unbound.service
      target: /usr/lib/systemd/system/unbound.service
    - path: /etc/systemd/system/multi-user.target.wants/tuned.service
      target: /usr/lib/systemd/system/tuned.service
    - path: /etc/systemd/system/kdump.service.target
      target: /dev/null
kernel_arguments:
  should_exist:
    - spectre_v2=on
    - spec_store_bypass_disable=on
    - l1tf=full,force
    - mds=full,nosmt
    - tsx=off
    - tsx_async_abort=full,nosmt
    - kvm.nx_huge_pages=force
    - nosmt=force
    - l1d_flush=on
    - mmio_stale_data=full,nosmt
    - random.trust_bootloader=off
    - random.trust_cpu=off
    - intel_iommu=on
    - amd_iommu=on
    - iommu.passthrough=0 iommu.strict=1
    - slab_nomerge
    - init_on_alloc=1
    - init_on_free=1
    - pti=on
    - vsyscall=none
    - page_alloc.shuffle=1
    - randomize_kstack_offset=on
    - extra_latent_entropy
    - debugfs=off
